// <auto-generated />
using System;
using ImoveisConnect.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImoveisConnect.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Apartamento", b =>
                {
                    b.Property<int>("ApartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartamentoId"));

                    b.Property<decimal>("Area")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("CodigoApartamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DataUltimaAtualizacaoStatus")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MotivoIndisponibilidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroQuartos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Disponivel");

                    b.HasKey("ApartamentoId");

                    b.HasIndex("CodigoApartamento")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.ToTable("Apartamentos", "imoveis");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .HasColumnName("CPF_Cliente")
                        .IsFixedLength();

                    b.Property<string>("ClienteEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClienteNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nome");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ClienteId");

                    b.HasIndex("CPF")
                        .IsUnique()
                        .HasDatabaseName("IX_Clientes_CPF");

                    b.HasIndex("ClienteEmail")
                        .HasDatabaseName("IX_Clientes_Email");

                    b.ToTable("Clientes", "imoveis");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(8)
                        .HasColumnType("int")
                        .HasColumnName("ID_MENU");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("DsCaminho")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DS_CAMINHO");

                    b.Property<string>("DsMenu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DS_MENU");

                    b.HasKey("MenuId")
                        .HasName("PK_TD_MENU");

                    b.ToTable("MENU", "imoveis");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilId"));

                    b.Property<string>("DsPerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DsPerfilSistema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfils");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.PerfilSubMenu", b =>
                {
                    b.Property<int>("PerfilSubMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilSubMenuId"));

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<int?>("SubMenuId")
                        .HasColumnType("int");

                    b.HasKey("PerfilSubMenuId");

                    b.HasIndex("MenuId");

                    b.HasIndex("PerfilId");

                    b.HasIndex("SubMenuId");

                    b.ToTable("PerfilSubMenu");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"));

                    b.Property<int>("ApartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ValorReserva")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservaId");

                    b.HasIndex("ApartamentoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DataExpiracao");

                    b.HasIndex("DataReserva");

                    b.HasIndex("Status");

                    b.ToTable("Reservas", "imoveis");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.SubMenu", b =>
                {
                    b.Property<int>("SubMenuId")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(8)
                        .HasColumnType("int")
                        .HasColumnName("ID_SUBMENU");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubMenuId"));

                    b.Property<string>("DsCaminho")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DS_CAMINHO");

                    b.Property<string>("DsSubMenu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DS_SUBMENU");

                    b.Property<bool>("IsAtivo")
                        .HasPrecision(1)
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVO");

                    b.Property<int>("MenuId")
                        .HasPrecision(8)
                        .HasColumnType("int")
                        .HasColumnName("ID_MENU");

                    b.HasKey("SubMenuId")
                        .HasName("PK_TD_SUBMENU");

                    b.HasIndex("MenuId");

                    b.ToTable("SUBMENU", "imoveis");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DsLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PerfilId");

                    b.HasIndex("Role");

                    b.ToTable("Usuarios", "imoveis");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Venda", b =>
                {
                    b.Property<int>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaId"));

                    b.Property<int>("ApartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Nullo");

                    b.Property<decimal>("ValorEntrada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VendaId");

                    b.HasIndex("ApartamentoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DataVenda");

                    b.ToTable("Vendas", "imoveis");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.PerfilSubMenu", b =>
                {
                    b.HasOne("ImoveisConnect.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("ImoveisConnect.Domain.Entities.Perfil", "Perfil")
                        .WithMany("PerfilSubMenus")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImoveisConnect.Domain.Entities.SubMenu", "SubMenu")
                        .WithMany()
                        .HasForeignKey("SubMenuId");

                    b.Navigation("Menu");

                    b.Navigation("Perfil");

                    b.Navigation("SubMenu");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("ImoveisConnect.Domain.Entities.Apartamento", "Apartamento")
                        .WithMany("Reservas")
                        .HasForeignKey("ApartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ImoveisConnect.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apartamento");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.SubMenu", b =>
                {
                    b.HasOne("ImoveisConnect.Domain.Entities.Menu", "Menu")
                        .WithMany("SubMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TD_SUBMENU_TD_MENU");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("ImoveisConnect.Domain.Entities.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Venda", b =>
                {
                    b.HasOne("ImoveisConnect.Domain.Entities.Apartamento", "Apartamento")
                        .WithMany("Vendas")
                        .HasForeignKey("ApartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ImoveisConnect.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apartamento");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Apartamento", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Menu", b =>
                {
                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("ImoveisConnect.Domain.Entities.Perfil", b =>
                {
                    b.Navigation("PerfilSubMenus");
                });
#pragma warning restore 612, 618
        }
    }
}
